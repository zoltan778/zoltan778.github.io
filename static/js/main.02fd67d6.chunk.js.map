{"version":3,"sources":["components/gallery/gallery.js","App.js","reportWebVitals.js","index.js"],"names":["Gallery","props","useState","stateImages","setStateImages","popup","setPopup","useEffect","images","fetch","then","response","json","imageData","console","log","hasOwnProperty","media_type","push","src","url","className","map","img","idx","onClick","e","App","Date","toISOString","slice","date","setDate","content","setContent","title","setTitle","description","setDescription","onChange","target","value","code","msg","explanation","to","exact","path","render","Fragment","type","name","id","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"+QAGe,SAASA,EAAQC,GAAQ,IAAD,EAEGC,mBAAS,IAFZ,mBAE5BC,EAF4B,KAEfC,EAFe,OAGTF,mBAAS,MAHA,mBAG5BG,EAH4B,KAGrBC,EAHqB,KA0CnC,OAzBAC,qBAAU,WACN,IAAIC,EAAS,GAEbC,MAAM,gGACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAQ,oBAGYA,GAHZ,IAGZ,2BAA8B,CAAC,IAApBC,EAAmB,QAC1BC,QAAQC,IAAIF,GACVA,EAAUG,eAAe,eAA0C,UAAzBH,EAAUI,WACpDT,EAAOU,KACH,wBAAQC,IAAG,UAAKN,EAAUO,IAAf,yBAIfZ,EAAOU,KACH,qBAAKC,IAAG,UAAKN,EAAUO,SAZrB,8BAeZN,QAAQC,IAAIP,GACZJ,EAAeI,QAElB,IAGC,sBAAKa,UAAU,UAAf,UAEQhB,EAGAF,EAAYmB,KAAI,SAACC,EAAKC,GAAN,OAChB,qBAAeH,UAAU,WAAWI,QAAS,SAACC,IA5C1C,SAACF,GAMblB,EACA,qBAAKe,UAAU,QAAQI,QALT,SAACC,GACXpB,EAAS,OAIb,SACKH,EAAYqB,MAoC4CC,CAAQD,IAA7D,SACKD,GADKC,SCiBXG,MAhEf,WAAgB,IAAD,EAEWzB,oBAAS,IAAI0B,MAAOC,cAAcC,MAAM,EAAG,KAFtD,mBAENC,EAFM,KAEAC,EAFA,OAGiB9B,mBAAS,IAH1B,mBAGN+B,EAHM,KAGGC,EAHH,OAIahC,mBAAS,IAJtB,mBAINiC,EAJM,KAICC,EAJD,OAKyBlC,mBAAS,IALlC,mBAKNmC,EALM,KAKOC,EALP,KAOPC,EAAW,SAACb,GAChBM,EAAQN,EAAEc,OAAOC,QA8BnB,OA3BAlC,qBAAU,WAERE,MAAM,4CAAD,OAA6CsB,EAA7C,sDACJrB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GACJE,QAAQC,IAAIH,GAERA,EAAKI,eAAe,SAAyB,MAAdJ,EAAK8B,KACtCR,EAAW,4BAAItB,EAAK+B,QAEpBP,EAASxB,EAAKuB,OACdG,EAAe1B,EAAKgC,aAEhBhC,EAAKI,eAAe,eAAqC,UAApBJ,EAAKK,WAC5CiB,EAAW,wBAAQf,IAAG,UAAKP,EAAKQ,IAAV,yBAItBc,EAAW,qBACCf,IAAG,UAAKP,EAAKQ,cAK9B,CAACW,IAIF,cAAC,IAAD,UACE,sBAAKV,UAAU,MAAf,UACE,mCACE,cAAC,IAAD,CAAMwB,GAAG,IAAT,kBADF,MAC6B,cAAC,IAAD,CAAMA,GAAG,WAAT,wBAE7B,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAAA/C,GAAK,OACjC,eAAC,IAAMgD,SAAP,WACE,uBAAOC,KAAK,OAAOC,KAAK,aAAaC,GAAG,aAAaX,MAAOV,EAAMQ,SAAUA,IAC5E,sBAAKlB,UAAU,uBAAf,UACE,6BAAKc,IACL,qBAAKd,UAAU,QAAf,SACGY,IAEH,qBAAKZ,UAAU,cAAf,SACGgB,aAKT,cAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,WAAWM,UAAWrD,UCnDjCsD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9C,MAAK,YAAkD,IAA/C+C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASd,OACP,cAAC,IAAMe,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.02fd67d6.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './gallery.css';\r\n\r\nexport default function Gallery(props) {\r\n\r\n    const [stateImages, setStateImages] = useState([]);\r\n    const [popup, setPopup] = useState(null);\r\n\r\n    const onClick = (idx) => {\r\n\r\n        const close = (e) => {\r\n            setPopup(null);\r\n        };\r\n\r\n        setPopup(\r\n        <div className=\"popup\" onClick={close}>\r\n            {stateImages[idx]}    \r\n        </div>);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let images = [];\r\n\r\n        fetch(`https://api.nasa.gov/planetary/apod?count=9&api_key=JZLWuJDR9crbBSjYEFfoziVpdkNQq6FNywPhfzdT`)\r\n        .then(response => response.json())\r\n        .then(json => {\r\n          //console.log(json)\r\n    \r\n          for (const imageData of json) {\r\n              console.log(imageData);\r\n            if (imageData.hasOwnProperty(\"media_type\") && imageData.media_type === \"video\")\r\n                images.push(\r\n                    <iframe src={`${imageData.url}?autoplay=1&mute=1`}>\r\n                    </iframe>\r\n                );\r\n            else\r\n                images.push(\r\n                    <img src={`${imageData.url}`} />\r\n                );      \r\n          }\r\n          console.log(images);\r\n          setStateImages(images);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"gallery\">\r\n            {\r\n                popup\r\n            }\r\n            {\r\n                stateImages.map((img, idx) => \r\n                <div key={idx} className=\"imageDiv\" onClick={(e) => {onClick(idx)}}>\r\n                    {img}\r\n                </div>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Gallery from './components/gallery/gallery';\n\nfunction App() {\n\n  const [date, setDate] = useState(new Date().toISOString().slice(0, 10));\n  const [content, setContent] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const onChange = (e) => {\n    setDate(e.target.value);\n  };\n\n  useEffect(() => {\n\n    fetch(`https://api.nasa.gov/planetary/apod?date=${date}&api_key=JZLWuJDR9crbBSjYEFfoziVpdkNQq6FNywPhfzdT`)\n    .then(response => response.json())\n    .then(json => {\n      console.log(json);\n\n      if (json.hasOwnProperty(\"code\") && json.code === 404)\n        setContent(<p>{json.msg}</p>);\n      else {\n        setTitle(json.title);\n        setDescription(json.explanation);\n  \n        if (json.hasOwnProperty(\"media_type\") && json.media_type === \"video\")\n          setContent(<iframe src={`${json.url}?autoplay=1&mute=1`}>\n                    </iframe>\n          );\n        else\n          setContent(<img\n                      src={`${json.url}`} />\n          );\n      }\n\n    });\n  }, [date]);\n\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <header>\n          <Link to=\"/\">Home</Link> | <Link to=\"/gallery\">Gallery</Link>\n        </header>\n        <Route exact path=\"/\" render={props => (\n          <React.Fragment>\n            <input type=\"date\" name=\"datePicker\" id=\"datePicker\" value={date} onChange={onChange}/>\n            <div className=\"imageWithDescription\">\n              <h2>{title}</h2>\n              <div className=\"image\">\n                {content}\n              </div>\n              <div className=\"description\">\n                {description}\n              </div>\n            </div>\n          </React.Fragment>\n        )} />\n        <Route exact path=\"/gallery\" component={Gallery} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}